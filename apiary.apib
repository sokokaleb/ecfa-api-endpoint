FORMAT: 1A
HOST: http://polls.apiblueprint.org/

# ECFA Data Endpoint API

This API is used by Fraud Analyzer client to store/retrieve information about orders.

## HTTPs Request

Every request should be made to the endpoint `https://api.ecfa-project.space/{resource}`, where `resource`
refers to the resource target. Currently, `resource` only accepts `orders`.

**Note that the request should be made via HTTPs protocol**

Allowed HTTPs request:
- `POST` - Create or update a resource
- `PUT` - Update a resource
- `GET` - Retrieve a resource

Note that requests made using `PUT` can also be done using `POST`, unless the reference below says otherwise.

## API Authorization

You should have had the API Token and Secret in order to be able to communicate with the API endpoint.
Both Token and Secret will be used to make the Basic Authorization header which will look like this:

```javascript
Authorization: Basic Base64-of-token:secret
```

For example, if you have API Token `pakkadim` and API Secret `midakkap`, every request's header
to API endpoint should include

```javascript
Authorization: Basic cGFra2FkaW06bWlkYWtrYXA
```

Notice that `cGFra2FkaW06bWlkYWtrYXA` is the output of `Base64(pakkadim:midakkap)`.

Any request made without specifying the authorization header will be responded with `403` error.

## Notes on API Authorization

If your API Token and Secret are exposed to the public, it should be considered to generate new
API Token and Secret as any adversary knowing the API Token and Secret may use masquerade attacks,
breaching the access to the data stored on the server.

## Order/Entry [/orders]

### Get Orders [GET]

+ Request (application/json)
    + Headers
        
            Accept: application/json
            Authorization: Basic base64-of-token:secret
    
    + Attributes (array)
        + order_id - Order/entry ID
    
    + Body
    
            ["A151003"]

+ Response 200 (application/json)

    + Attributes (array[ECFAOrder])
    
    + Body

            [
                {
                    "order_id": "A151003",
                    "fraud_percentage": 25
                }
            ]

### Store Orders [POST]

+ Request (application/json)
    + Headers
        
            Accept: application/json
            Authorization: Basic base64-of-token:secret
        
    + Attributes (array[Order])

    + Body
    
            [
                {
                    "order_id": "A151003"
                }
            ]

+ Response 201 (application/json)
    + Attributes (CreationUpdateResponse)
    
    + Body
    
            {
                "code": 201,
                successful_ids: [
                    "A151003"
                ],
                unsuccessful_ids: [
                    "B151003"
                ]
            }

+ Response 401 (application/json)
    + Attributes (UnauthorizedResponse)
    
    + Body
    
            {
                "code": 403,
                "message": "Authorization header not found or invalid."
            }

### Update Orders [PUT]

Note that this API request acts the same with the `POST` one, except that this one will only return `200` if all
of the identifiers are found in the server.

+ Request (application/json)
    + Headers
        
            Accept: application/json
            Authorization: Basic base64-of-token:secret
        
    + Attributes (array[Order])

    + Body
    
            [
                {
                    "order_id": "A151003"
                }
            ]

+ Response 201 (application/json)
    + Attributes (CreationUpdateResponse)
    
    + Body
    
            {
                "code": 201,
                successful_ids: [
                    "A151003"
                ],
                unsuccessful_ids: [
                    "B151003"
                ]
            }

+ Response 401 (application/json)
    + Attributes (UnauthorizedResponse)
    
    + Body
    
            {
                "code": 403,
                "message": "Authorization header not found or invalid."
            }

# Data Structures

## Order (object)
+ order_id: A151003 (string, required) - The ID for an order/entry.

## ECFAOrder (Order)
+ fraud_percentage: 25 (number) - The fraud percentage of an order/entry.

## Response (object)
+ code: 200 (number, required) - The response's return code.

## CreationUpdateResponse (object)
+ code: 201 (number, required) - The response's return code.
+ successful_ids (array, required) - Collection of string denoting the order ID's which are successfuly made/updated.
    + A151003 (string) - The ID of the successfully made/updated order/entry.
+ unsuccessful_ids (array, required) - Collection of string denoting the order ID's which are failed to be made/updated.
    + B151003 (string) - The ID of the unsuccessfully made/update order/entry.

## UnauthorizedResponse (object)
+ code: 403 (number, required) - The response's return code.
+ message: Authorization header not found or invalid. (string, required) - The message denoting the error.